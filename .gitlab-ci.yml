
# stages: 
#     # - build
#     - test
    
#     # - deploy
# # build-job:
# #   stage: build
# #   script: 
# #   - echo: "Compiling ready"
# #   -echo: "Compiling complete"

# test-job:
#   image: mcr.microsoft.com/playwright
#   stage: test
#   script:
#       - npm ci
#       - npx playwright install --with-deps
#       - npx playwright test
#   artifacts:
#      when: always
#      paths: 
#        - playwright-report/**
      # - echo: "Running tests."
      # - sleep  60
      # - echo: "Code coverage is 90%."

stages:
  - sync
  - test

sync_with_github:
  stage: sync
  script:
    # Check if the remote already exists to avoid duplication
    - if git remote | grep github; then git remote remove github; fi
    # Add the GitHub remote
    - git remote add github https://github.com/Davidsonabimbola/Airline_Booking.git
    # Fetch the latest changes from GitHub
    - git fetch github
    # Push the fetched changes to the GitLab repository
    - git push origin main
  only:
    - main  # Ensure this job runs only on the main branch
  before_script:
    # Set up Git credentials for GitHub and GitLab if necessary
    - git config --global user.email "your-email@example.com"
    - git config --global user.name "Your Name"
    # This is optional but ensures you don't face authentication issues:
    - git config --global credential.helper store

test-job:
  image: mcr.microsoft.com/playwright
  stage: test
  script:
    - npm ci
    - npx playwright install --with-deps
    - npx playwright test
  artifacts:
    when: always
    paths: 
      - playwright-report/**
  only:
    - main  # Ensure this job runs only on the main branch



# deploy-job:
#   stage: deploy
#   script:
#     - echo: "Deploying application"
#     - echo: "Application succesfully deployed"

